#include <iostream>
#include <vector>
using namespace std;

int maxWater(vector<int>& height) {
    int n = height.size();
    if (n == 0) return 0;

    int left = 0, right = n - 1;
    int left_max = 0, right_max = 0;
    int res = 0;

    while (left < right) {
        if (height[left] <= height[right]) {
            if (height[left] >= left_max)
                left_max = height[left];      // Update left boundary
            else
                res += left_max - height[left]; // Add trapped water
            left++;
        } else {
            if (height[right] >= right_max)
                right_max = height[right];     // Update right boundary
            else
                res += right_max - height[right]; // Add trapped water
            right--;
        }
    }
    return res;
}

int main() {
    vector<int> arr = {2, 1, 5, 3, 1, 0, 4};
    cout << maxWater(arr);
    return 0;
}

